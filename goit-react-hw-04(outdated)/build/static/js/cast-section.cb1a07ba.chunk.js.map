{"version":3,"sources":["components/Notification/Notification.js","views/Cast.js"],"names":["Notification","message","window","scrollTo","top","document","documentElement","scrollHeight","behavior","className","Cast","state","cast","castImgUrl","imgPath","console","log","fetchMoviesCast","this","props","match","params","movieId","then","setState","length","map","castItem","key","id","src","profile_path","alt","original_title","character","name","Object","keys","Component"],"mappings":"+GAAA,4DAIO,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAK7B,OAJAC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAGV,oCACE,yBAAKC,UAAU,aACb,wBAAIA,UAAU,gBAAgBR,O,wKCRjBS,E,4MACnBC,MAAQ,CACNC,KAAM,I,EASRC,WAAa,SAACC,GACZ,GAAIA,EACF,MAAM,kCAAN,OAAyCA,GAE3CC,QAAQC,IAAI,yB,kEAVO,IAAD,OAClBC,YAAgBC,KAAKC,MAAMC,MAAMC,OAAOC,SAASC,MAAK,SAACX,GAAD,OACpD,EAAKY,SAAS,CAAEZ,c,+BAWV,IAAD,OACCA,EAASM,KAAKP,MAAdC,KACR,OACE,6BACGA,EAAKa,OAAS,EACb,oCACE,wDACA,4BACGb,EAAKc,KAAI,SAACC,GAAD,OACR,wBAAIC,IAAKD,EAASE,IAChB,yBACEC,IAAG,UAAK,EAAKjB,WAAWc,EAASI,eACjCC,IAAKpB,EAAKqB,iBAEZ,2BAAIN,EAASO,WACb,2BAAIP,EAASQ,YAMrB,kBAAC,IAAD,CACElC,QAAO,gCAA2BmC,OAAOC,KAAKnB,KAAKP,e,GAxC7B2B","file":"static/js/cast-section.cb1a07ba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Notification.css\";\r\n\r\nexport function Notification({ message }) {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"Container\">\r\n        <h1 className=\"Notification\">{message}</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { fetchMoviesCast } from \"../helpers/imagesApi\";\r\nimport { Notification } from \"../components/Notification/Notification\";\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetchMoviesCast(this.props.match.params.movieId).then((cast) =>\r\n      this.setState({ cast })\r\n    );\r\n  }\r\n\r\n  castImgUrl = (imgPath) => {\r\n    if (imgPath) {\r\n      return `https://image.tmdb.org/t/p/w400${imgPath}`;\r\n    }\r\n    console.log(\"Still havent imgPath\");\r\n  };\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <div>\r\n        {cast.length > 0 ? (\r\n          <>\r\n            <p>Welcome on Cast component</p>\r\n            <ul>\r\n              {cast.map((castItem) => (\r\n                <li key={castItem.id}>\r\n                  <img\r\n                    src={`${this.castImgUrl(castItem.profile_path)}`}\r\n                    alt={cast.original_title}\r\n                  />\r\n                  <p>{castItem.character}</p>\r\n                  <p>{castItem.name}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </>\r\n        ) : (\r\n          <Notification\r\n            message={`Sorry, but we haven't ${Object.keys(this.state)}`}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}